<?php

// $Id: gandalf.module,v 1.3 2007/06/11 16:34:16 ralph Exp $

require_once('gandalf_wizard.php');

/**
 * Display help and module information
 * @param section which section of the site we're displaying help 
 * @return help text for section
 */
function gandalf_help($section='') {

  $output = '';

  switch ($section) {
    case "admin/help#gandalf":
      $output = '<p>'.  t("text found in gandalf_help function"). '</p>';
      break;
  }

  return $output;
} // function gandalf_help

/**
 * Valid permissions for this module
 * @return array An array of valid permissions for the onthisdate module
 */
function gandalf_perm() {
  return array('may view example');
} // function gandalf_perm()

function gandalf_menu() {

  $items = array();

  $items['gandalf'] = array(
    'title' => t('An Example Wizard'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('gandalf_wizard'),
    'access arguments' => array('may view example'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

function gandalf_wizard(&$form_state=NULL) {

  if(!isset($form_state['storage'])) {
    $wizard = gandalf_wizard_config();
    module_invoke('wizard','config_create',$wizard);
  }

  return module_invoke('wizard', 'form', $form_state);
}

function gandalf_wizard_validate($form, &$form_state, $step) {
  // We can validate each page separately. This works because Drupal
  // only allows form values from the form last shown to the user.
  // That means it's impossible for someone to hack the form and send
  // stuff that's on a previous page to this one.
  // This example only needs to validate the age (on page 3). Normally,
  // you'd expect far more validation than that, hence the switch/case.
  // wizard.module automatically sets $step as appropriate.
  switch($step) {
    case 1:
      break;
    case 2:
      break;
    case 3:
      // Check the age is reasonable. People get pretty old, so we just
      // make sure it's a positive integer.
      if(!is_numeric($form_state['values']['age']) || $form_state['values']['age'] <= 0) {
        form_set_error('age', t('Your age must be numeric and greater than 0.'));
      }
      break;
  }
}

function gandalf_wizard_submit($form, &$form_state, $step) {
  $userdata = $form_state['storage'];

  if($form_state['values']['wizard_button_pressed'] == 'finish') {
    // Now run through the stuff we've been given, and construct suitable messages.
    $planet = $userdata['planet'];
    $likeit = $userdata['likeit'] ? 'and you like it there' : 'but you don\'t like it';
    $stuff = '';
    if($planet == 'mars') {
      $drinks = '';
      if(isset($userdata['drinks'])) {
        $useable = array();
        $max=0;
        foreach($userdata['drinks'] as $key => $value) {
          if($value != '0') {
            $useable[] = $value;
            $max++;
          }
        }
        $count = 1;
        foreach(array_values($useable) as $value) {
          $drinks .= $value;
          $count++;
          if($count < $max) {
            $drinks .= ', ';
          } elseif($count == $max) {
            $drinks .= ' and ';
          }
        } 
      } 
      if($drinks != '') {
        $stuff .= 'You like to drink ' . $drinks;
      } else {
        $stuff .= 'You don\'t like to drink';
      }
    } else {
      $shopping = '';
      if(isset($userdata['shopping'])) {
        $useable = array();
        $max=0;
        foreach($userdata['shopping'] as $key => $value) {
          if($value != '0') {
            $useable[] = $value;
            $max++;
          }
        }
        $count = 1;
        foreach(array_values($useable) as $value) {
          $shopping .= $value;
          $count++;
          if($count < $max) {
            $shopping .= ', ';
          } elseif($count == $max) {
            $shopping .= ' and ';
          }
        }
      }
      if($shopping != '') {
        $stuff .= 'You like to shop for ' . $shopping;
      } else {
        $stuff .= 'You don\'t like to shop';
      }
    }
    // Now get age...
    $age = $userdata['age'];
    $units = $userdata['units'];
    // Now write messages...
    drupal_set_message(t('You live on !planet !likeit. !stuff. You are !age !units years old.',
      array('!planet' => $planet, '!likeit' => $likeit, '!stuff' => $stuff, '!age' => $age, '!units' => $units)));

    // This is wizard.module, not Drupal 6. Return a string
    // to do a redirect, or FALSE otherwise.
    return 'node';
  }
    
  return FALSE;
}


// The following line is for Vim users - please don't delete it.
// vim: set filetype=php expandtab tabstop=2 shiftwidth=2:
